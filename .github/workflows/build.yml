# SPDX-FileCopyrightText: 2024 shadPS4 Emulator Project
# SPDX-License-Identifier: GPL-2.0-or-later

name: Build and Release - Windows Qt Only

on: [push, pull_request]

concurrency:
  group: ci-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'push' }}

env:
  BUILD_TYPE: Release

jobs:
  get-info:
    runs-on: ubuntu-24.04
    outputs:
      date: ${{ steps.vars.outputs.date }}
      shorthash: ${{ steps.vars.outputs.shorthash }}
      fullhash: ${{ steps.vars.outputs.fullhash }}
    steps:
      - uses: actions/checkout@v4
      - name: Get date and git hash
        id: vars
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "fullhash=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "fullhash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  windows-qt:
    runs-on: windows-2025
    needs: get-info
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.9.0
          host: windows
          target: desktop
          arch: win64_msvc2022_64
          archives: qtbase qttools
          modules: qtmultimedia

      - name: Cache CMake Configuration
        uses: actions/cache@v4
        env:
          cache-name: ${{ runner.os }}-qt-ninja-cache-cmake-configuration
        with:
          path: |
            ${{github.workspace}}/build
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Cache CMake Build
        uses: hendrikmuhs/ccache-action@v1.2.17
        env:
          cache-name: ${{ runner.os }}-qt-cache-cmake-build
        with:
          append-timestamp: false
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}

      - name: Setup VS Environment
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: amd64

      - name: Configure CMake
        run: cmake --fresh -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_QT_GUI=ON -DENABLE_UPDATER=ON -DCMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE=ON -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $env:NUMBER_OF_PROCESSORS

      - name: Deploy and Package
        run: |
          mkdir upload
          move build/shadPS4.exe upload
          windeployqt --no-compiler-runtime --no-system-d3d-compiler --no-system-dxc-compiler --dir upload upload/shadPS4.exe
          Compress-Archive -Path upload/* -DestinationPath shadps4-win64-qt-${{ needs.get-info.outputs.date }}-${{ needs.get-info.outputs.shorthash }}.zip

      - name: Upload Windows Qt artifact
        uses: actions/upload-artifact@v4
        with:
          name: shadps4-win64-qt-${{ needs.get-info.outputs.date }}-${{ needs.get-info.outputs.shorthash }}
          path: upload/
